env:
  application:
    name: test
    parallelism: 1

sources:
  - type: faker
    outputs: [ faker_source ]
    schema: "struct<id:bigint, cate:string, str:string, nuallable_int:int, in_bytes:bigint, out_bytes:bigint>"
    #schema: "id bigint, `cate` string, str string, nuallable_int int, in_bytes bigint, out_bytes bigint"
    rows_per_second: 1
    number_of_rows: 100
    fields: [
      { "name": "id", "type": "int", "min": 1, "max": 1000000, "random": false },
      { "name": "cate", "type": "string", "options": [ "a", "b", null, "c", "d" ] },
      { "name": "str", "type": "string", "regex": "[a-z]{2}_12" },
      { "name": "nuallable_int", "type": "int", "min": 1, "max": 10, "null_rate": 0.3 },
      { "name": "in_bytes", "type": "int", "min": 100, "max": 10000 },
      { "name": "out_bytes", "type": "int", "min": 100, "max": 10000 }
    ]

transforms:
  - type: query
    inputs: [ faker_source ]
    outputs: [ query ]
    sql: |
      select 
          `id`, cate, str, substr(str, 1, 2) a,
          split(str, '_') str_split,
          split_part(str, '_', 2) `str_split_part`,
          split(str, '_')[1] str_split_idx
      from tbl
      where id % 2 = 1
  - type: query
    inputs: [ faker_source ]
    outputs: [ query0 ]
    sql: |
      select 
          id, cate, str, nuallable_int, cast(nuallable_int as string) int_str,
          nvl(nuallable_int, 0) int1,
          coalesce(nuallable_int, 0) int2,
          case nuallable_int
            when '1' then 'a'
            when '2' then 'b'
            when '3' then 'c'
            when '4' then 'd'
            when '5' then 'e'
            else 'k'
          end as cate_case,
          case
            when nuallable_int = '1' then 'a'
            when nuallable_int = '2' then 'b'
            when nuallable_int = 3 then 'c'
            when nuallable_int = 4 then 'd'
            when nuallable_int = 5 then 'e'
            else 'k'
          end as cate_case_1,
          case
            when nuallable_int in (1, 2, 3) then 'a'
            when nuallable_int in (4, 5, 6) then 'b'
            else 'k'
          end as cate_case_2
      from tbl
      where id % 2 = 1
  - type: query
    inputs: [ faker_source ]
    outputs: [ query1 ]
    sql: |
      select 
          id, cate, str, str like 'a%' a, nuallable_int, nuallable_int is null na, nuallable_int in (1, 2, 3) is_in,
          if(nuallable_int is null, 1, 2) i,
          nuallable_int between 4 and 6 range46
      from tbl
      where id % 2 = 1
  - type: query
    inputs: [ faker_source ]
    outputs: [ query2 ]
    sql: |
      select 
          id, cate, str, 
          current_timestamp() timestamp,  from_unixtime(id) timestamp2,
          unix_timestamp() ts1, to_unix_timestamp('1970-01-01 08:00:00') ts1
      from tbl
      where id % 2 = 1
sinks:
  - type: print
    name: print_sink
    inputs: [ query ]
    print_mode: stdout
    encoding:
      codec: json

active_sinks: [print_sink]